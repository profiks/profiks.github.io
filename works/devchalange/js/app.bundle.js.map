{"version":3,"names":[],"mappings":"","sources":["app.bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _navHover = require('./src/navHover');\n\nvar _navHover2 = _interopRequireDefault(_navHover);\n\nvar _carouselSlide = require('./src/carouselSlide');\n\nvar _carouselSlide2 = _interopRequireDefault(_carouselSlide);\n\nvar _scrollUp = require('./src/scrollUp');\n\nvar _scrollUp2 = _interopRequireDefault(_scrollUp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Cache DOM elements\r\n*/\nvar nav = document.getElementById('mainNavigation');\nvar carousel = document.getElementById('promoCarousel');\n\nif (nav !== null) {\n  var initNavigation = new _navHover2.default(nav);\n}\n\nif (carousel !== null) {\n  var initCarousel = new _carouselSlide2.default(carousel);\n}\n\nvar initScrollUp = new _scrollUp2.default();\n\n},{\"./src/carouselSlide\":2,\"./src/navHover\":3,\"./src/scrollUp\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class for carousel functionality\r\n */\n\nvar carouselSlide = function () {\n\n    /**\r\n     * Constructor of class\r\n     * @param {selector} carousel - carousel id.\r\n     */\n\n    function carouselSlide(carousel) {\n        var _this = this;\n\n        _classCallCheck(this, carouselSlide);\n\n        this.screens = carousel.getElementsByTagName('div'); // get content of each slide\n\n        // Create bullets navigation for slides\n        this.bullets = document.createElement('ul');\n        this.bullets.classList.add('bullet');\n\n        // Create dots for count of slides\n        for (var _i = 0; _i < this.screens.length; _i++) {\n            this.dot = document.createElement('li');\n            this.dot.classList.add('bullet__item');\n            this.dot.dataset.target = _i;\n            this.bullets.appendChild(this.dot);\n        }\n\n        // append all after slider container\n        carousel.parentNode.insertBefore(this.bullets, carousel.nextSibling);\n\n        this.dots = this.bullets.getElementsByTagName('li'); // select all dots\n\n        this.init(this.screens, this.dots); // set first slide active\n\n\n        // event listner for click on dots \n        for (var _b = 0; _b < this.dots.length; _b++) {\n            this.dots[_b].addEventListener('click', function (e) {\n                _this.show(e.target.dataset.target); // passing data-target number to function for showing slide\n            }, false);\n        }\n    }\n\n    /**\r\n     * Initialize first apperance of slider \r\n     * @param {object} slides - object of slides from DOM\r\n     * @param {object} bullets - object of created navigation list\r\n     */\n\n    _createClass(carouselSlide, [{\n        key: 'init',\n        value: function init(slides, bullets) {\n            slides[0].classList.add('carousel__item--active');\n            bullets[0].classList.add('bullet__item--active');\n        }\n\n        /**\r\n         * Show active slide and hide inactive\r\n         * @param {number} numb - number of current slide\r\n         */\n\n    }, {\n        key: 'show',\n        value: function show(numb) {\n\n            if (this.screens[numb].classList.contains('carousel__item--active') && this.dots[numb].classList.contains('bullet__item--active')) {\n                return false;\n            } else {\n                for (var _p = 0; _p < this.screens.length; _p++) {\n                    this.screens[_p].classList.remove('carousel__item--active');\n                    this.dots[_p].classList.remove('bullet__item--active');\n                }\n\n                this.screens[numb].classList.add('carousel__item--active');\n                this.dots[numb].classList.add('bullet__item--active');\n            }\n        }\n    }]);\n\n    return carouselSlide;\n}();\n\nexports.default = carouselSlide;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class to add bottom purple runing line to navigation.\r\n */\nvar navHover = function () {\n\n  /**\r\n   * Constructor of class.\r\n   * @param {selector} nav - navigation id.\r\n   */\n\n  function navHover(nav) {\n    _classCallCheck(this, navHover);\n\n    /**\r\n     * Create additional markup for bottom line\r\n     */\n    this.line = document.createElement('div');\n    this.line.className = 'top-nav__line';\n    this.marquee = document.createElement('span');\n    this.marquee.className = 'top-nav__marquee';\n    this.line.appendChild(this.marquee);\n    nav.appendChild(this.line);\n\n    /**\r\n     * Create event listner for hover over navigation\r\n     */\n    this.list = nav.getElementsByTagName('li'); // obj of all li elements\n\n    for (var _i = 0; _i < this.list.length; ++_i) {\n      this.over(this.list[_i]);\n      this.leave(this.list[_i]);\n    }\n  }\n\n  /**\r\n   * Event listner for mouse over\r\n   * @param {object} listItem - current hovered ellement\r\n   */\n\n\n  _createClass(navHover, [{\n    key: 'over',\n    value: function over(listItem) {\n      listItem.addEventListener('mouseover', this.init.bind(this), false);\n    }\n\n    /**\r\n     * Event handler for loose focus\r\n     * @param {object} listItem - last hovered ellement\r\n     */\n\n  }, {\n    key: 'leave',\n    value: function leave(listItem) {\n      listItem.addEventListener('mouseleave', this.clear.bind(this), false);\n    }\n\n    /**\r\n     * Function to initialize width and position of marker\r\n     * @param {obj} e - event\r\n     */\n\n  }, {\n    key: 'init',\n    value: function init(e) {\n      this.marquee.style.left = e.toElement.offsetLeft + 'px';\n      this.marquee.style.width = e.target.clientWidth + 'px';\n    }\n\n    /**\r\n     * Function to clear marquee width when mouse leave element\r\n     * Position remaining the same\r\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.marquee.style.width = 0;\n    }\n  }]);\n\n  return navHover;\n}();\n\nexports.default = navHover;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n* Class for scroll up link when offset top is 25%\r\n*/\n\nvar scrollUp = function () {\n\n    /**\r\n     * Counstructor of class\r\n     */\n    function scrollUp() {\n        _classCallCheck(this, scrollUp);\n\n        // create DOM element for link\n        this.anchor = document.createElement('a');\n        this.anchor.classList.add('scroll-up');\n        this.anchor.dataset.text = 'В гору'; // text to display from CSS content\n        document.getElementsByTagName('body')[0].appendChild(this.anchor); // append link on bottom\n\n        this.fullHeight = document.body.scrollHeight; // get height of entire page\n        this.active = false; // check flag for scroll up link\n\n        window.addEventListener('scroll', this.topDistance.bind(this), false);\n        this.anchor.addEventListener('click', this.scrollUp.bind(this), false);\n    }\n\n    _createClass(scrollUp, [{\n        key: 'topDistance',\n        value: function topDistance() {\n            this.topOffset = window.pageYOffset; // offset from top\n\n            // calculate 10% ow window height\n            this.percentFromTop = this.fullHeight * 10 / 100;\n\n            // scroll time = iteraded scroll duration\n            this.scrollDuration = this.topOffset / 10 * 1.5;\n\n            if (this.topOffset >= this.percentFromTop && !this.active) {\n                this.anchor.classList.add('scroll-up--shown');\n                this.active = true;\n            } else if (this.topOffset < this.percentFromTop && this.active) {\n                this.anchor.classList.remove('scroll-up--shown');\n                this.active = false;\n            }\n        }\n    }, {\n        key: 'scrollUp',\n        value: function scrollUp(e) {\n            e.preventDefault;\n            e.stopPropagation;\n\n            var scrollStep = -window.scrollY / (this.scrollDuration / 15),\n                scrollInterval = setInterval(function () {\n                if (window.scrollY != 0) {\n                    window.scrollBy(0, scrollStep);\n                } else clearInterval(scrollInterval);\n            }, 15);\n        }\n    }]);\n\n    return scrollUp;\n}();\n\nexports.default = scrollUp;\n\n},{}]},{},[1])"],"file":"app.bundle.js","sourceRoot":"/source/"}